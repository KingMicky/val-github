[
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "valentine_api",
        "description": "valentine_api",
        "isExtraImport": true,
        "detail": "valentine_api",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 2,
        "importPath": "tests.api_test",
        "description": "tests.api_test",
        "peekOfCode": "def app():\n    yield flask_app\n@pytest.fixture\ndef client(app):\n    return app.test_client()\ndef api_test(client):\n    response = client.get('/valentine')\n    assert response.status_code == 200\n    data = response.get_json()\n    assert 'quote' in data",
        "detail": "tests.api_test",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 2,
        "importPath": "tests.api_test",
        "description": "tests.api_test",
        "peekOfCode": "def client(app):\n    return app.test_client()\ndef api_test(client):\n    response = client.get('/valentine')\n    assert response.status_code == 200\n    data = response.get_json()\n    assert 'quote' in data\ndef api_test(client):\n    response = client.post('/will_you_be_my_valentine', data={'answer': 'yes'})\n    assert response.status_code == 200",
        "detail": "tests.api_test",
        "documentation": {}
    },
    {
        "label": "api_test",
        "kind": 2,
        "importPath": "tests.api_test",
        "description": "tests.api_test",
        "peekOfCode": "def api_test(client):\n    response = client.get('/valentine')\n    assert response.status_code == 200\n    data = response.get_json()\n    assert 'quote' in data\ndef api_test(client):\n    response = client.post('/will_you_be_my_valentine', data={'answer': 'yes'})\n    assert response.status_code == 200\n    data = response.get_json()\n    assert 'message' in data",
        "detail": "tests.api_test",
        "documentation": {}
    },
    {
        "label": "api_test",
        "kind": 2,
        "importPath": "tests.api_test",
        "description": "tests.api_test",
        "peekOfCode": "def api_test(client):\n    response = client.post('/will_you_be_my_valentine', data={'answer': 'yes'})\n    assert response.status_code == 200\n    data = response.get_json()\n    assert 'message' in data\n    assert 'yes' in data['message'].lower()\n    response = client.post('/will_you_be_my_valentine', data={'answer': 'no'})\n    assert response.status_code == 200\n    data = response.get_json()\n    assert 'message' in data",
        "detail": "tests.api_test",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "valentine_api",
        "description": "valentine_api",
        "peekOfCode": "def index():\n    return render_template('index.html')\n@app.route('/valentine', methods=['GET'])\ndef get_valentine_quote():\n    quote = random.choice(romantic_quotes)\n    return jsonify({'quote': quote})\n@app.route('/will_you_be_my_valentine', methods=['POST'])\ndef ask_valentine():\n    data = request.form.get('answer')\n    response = f\"You chose: {data}\"",
        "detail": "valentine_api",
        "documentation": {}
    },
    {
        "label": "get_valentine_quote",
        "kind": 2,
        "importPath": "valentine_api",
        "description": "valentine_api",
        "peekOfCode": "def get_valentine_quote():\n    quote = random.choice(romantic_quotes)\n    return jsonify({'quote': quote})\n@app.route('/will_you_be_my_valentine', methods=['POST'])\ndef ask_valentine():\n    data = request.form.get('answer')\n    response = f\"You chose: {data}\"\n    return jsonify({'message': response})\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "valentine_api",
        "documentation": {}
    },
    {
        "label": "ask_valentine",
        "kind": 2,
        "importPath": "valentine_api",
        "description": "valentine_api",
        "peekOfCode": "def ask_valentine():\n    data = request.form.get('answer')\n    response = f\"You chose: {data}\"\n    return jsonify({'message': response})\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "valentine_api",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "valentine_api",
        "description": "valentine_api",
        "peekOfCode": "app = Flask(__name__)\n# Romantic quotes for Valentine's Day\nromantic_quotes = [\n    \"Love is not just looking at each other, it's looking in the same direction. - Antoine de Saint-Exupéry\",\n    \"The best and most beautiful things in the world cannot be seen or even touched. They must be felt with the heart. - Helen Keller\",\n    \"I have waited for this opportunity for more than half a century, to repeat to you once again my vow of eternal fidelity and everlasting love. - Gabriel Garcia Marquez\",\n    \"Love is an endless mystery, for it has nothing else to explain it. - Rabindranath Tagore\",\n    \"You know you're in love when you can't fall asleep because reality is finally better than your dreams. - Dr. Seuss\",\n]\n@app.route('/')",
        "detail": "valentine_api",
        "documentation": {}
    },
    {
        "label": "romantic_quotes",
        "kind": 5,
        "importPath": "valentine_api",
        "description": "valentine_api",
        "peekOfCode": "romantic_quotes = [\n    \"Love is not just looking at each other, it's looking in the same direction. - Antoine de Saint-Exupéry\",\n    \"The best and most beautiful things in the world cannot be seen or even touched. They must be felt with the heart. - Helen Keller\",\n    \"I have waited for this opportunity for more than half a century, to repeat to you once again my vow of eternal fidelity and everlasting love. - Gabriel Garcia Marquez\",\n    \"Love is an endless mystery, for it has nothing else to explain it. - Rabindranath Tagore\",\n    \"You know you're in love when you can't fall asleep because reality is finally better than your dreams. - Dr. Seuss\",\n]\n@app.route('/')\ndef index():\n    return render_template('index.html')",
        "detail": "valentine_api",
        "documentation": {}
    }
]